name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kitus_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Copy env file
      run: cp .env.example .env

    - name: Run migrations
      run: node ace migration:run
      env:
        NODE_ENV: test
        DB_CONNECTION: pg
        PG_HOST: localhost
        PG_PORT: 5432
        PG_USER: postgres
        PG_PASSWORD: postgres
        PG_DB_NAME: kitus_test

    - name: Run tests
      run: pnpm test
      env:
        NODE_ENV: test
        DB_CONNECTION: pg
        PG_HOST: localhost
        PG_PORT: 5432
        PG_USER: postgres
        PG_PASSWORD: postgres
        PG_DB_NAME: kitus_test

    - name: Run linter
      run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/
