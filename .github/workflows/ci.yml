name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: kitus
          POSTGRES_PASSWORD: kitus
          POSTGRES_DB: kitus_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Generate APP_KEY
      run: |
        APP_KEY=$(node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
        echo "APP_KEY=$APP_KEY" >> $GITHUB_ENV

    - name: Copy env file
      run: |
        cp .env.example .env
        echo "APP_KEY=${{ env.APP_KEY }}" >> .env
        echo "DB_CONNECTION=pg" >> .env
        echo "PG_HOST=localhost" >> .env
        echo "PG_PORT=5432" >> .env
        echo "PG_USER=kitus" >> .env
        echo "PG_PASSWORD=kitus" >> .env
        echo "PG_DB_NAME=kitus_test" >> .env

    - name: Run migrations
      run: node ace migration:run
      env:
        NODE_ENV: test
        APP_KEY: ${{ env.APP_KEY }}
        DB_CONNECTION: pg
        PG_HOST: localhost
        PG_PORT: 5432
        PG_USER: kitus
        PG_PASSWORD: kitus
        PG_DB_NAME: kitus_test

    - name: Run tests
      run: pnpm test
      env:
        NODE_ENV: test
        APP_KEY: ${{ env.APP_KEY }}
        DB_CONNECTION: pg
        PG_HOST: localhost
        PG_PORT: 5432
        PG_USER: kitus
        PG_PASSWORD: kitus
        PG_DB_NAME: kitus_test

    - name: Run linter
      run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Generate APP_KEY
      run: |
        APP_KEY=$(node -e "console.log(require('crypto').randomBytes(32).toString('base64'))")
        echo "APP_KEY=$APP_KEY" >> $GITHUB_ENV

    - name: Build
      run: pnpm build
      env:
        APP_KEY: ${{ env.APP_KEY }}
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/
